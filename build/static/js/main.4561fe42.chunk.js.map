{"version":3,"sources":["logo.svg","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Search","items","onAnalyze","forSubmit","onSearch","useState","text","textState","setText","style","padding","height","noValidate","autoComplete","onSubmit","e","TextField","label","variant","width","onChange","target","value","handleChange","className","marginTop","rows","columns","field","headerName","hide","pageSize","onRowClick","cellParams","App","searchItems","searching","searchState","setSearch","hidden","chartData","title","chartState","setChart","modalOpen","setModal","useEffect","angle","changeBackground","document","body","background","requestAnimationFrame","animateBackground","getLoadItems","axios","get","then","res","data","handleModal","bool","Paper","elevation","CircularProgress","rowModel","id","track","artists","album","danceability","energy","instrumentalness","speechiness","liveness","acousticness","valence","key","mode","tempo","parseInt","Math","floor","options","chart","type","forColor","colors","series","plotOptions","radialBar","show","ApexCharts","querySelector","render","catch","err","console","log","preventDefault","error","isSearching","color","Button","onClick","border","backgroundColor","boxShadow","Dialog","onClose","aria-labelledby","open","DialogTitle","DialogContent","class","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","typography","fontFamily","fontSize","palette","primary","secondary","action","active","divider","main","light","ReactDOM","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.4561fe42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./Search.css\";\nimport axios from \"axios\";\n\nconst Search = ({ items, onAnalyze, onSearch, forSubmit }) => {\n  const [textState, setText] = useState({ text: \"\" });\n  const handleChange = (e) => {\n    setText({ text: e.target.value });\n  };\n\n  const columns = [\n    { field: \"track\", headerName: \"Song Name\", width: 300 },\n    { field: \"artists\", headerName: \"Artists\", width: 300 },\n    { field: \"album\", headerName: \"Album\", width: 300 },\n    { field: \"id\", headerName: \"UUID\", width: 220, hide: true },\n  ];\n  return (\n    <div style={{ padding: \"50px\", height: \"100%\" }}>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => forSubmit(e, textState)}\n      >\n        <TextField\n          label=\"Enter Song\"\n          variant=\"outlined\"\n          style={{ width: \"50vw\", height: \"50px\" }}\n          onChange={(e) => handleChange(e)}\n        />\n      </form>\n      <div\n        className=\"dataWrapper\"\n        style={{ height: 400, width: \"100%\", marginTop: \"2%\" }}\n      >\n        <DataGrid\n          rows={items}\n          columns={columns}\n          pageSize={6}\n          onRowClick={(cellParams) => {\n            onAnalyze(cellParams);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import logo from \"./logo.svg\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  Paper,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Search from \"./components/Search\";\nimport axios from \"axios\";\nimport ApexCharts from \"apexcharts\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nfunction App() {\n  const animateBackground = () => {\n    let angle = 0;\n\n    const changeBackground = () => {\n      angle++;\n      document.body.style.background = `linear-gradient(${angle}deg, rgba(217, 119, 191, 1) 0%, rgba(217, 163, 98, 1) 33%, rgba(217, 141, 98, 1) 60%, rgba(217, 96, 85, 1) 100%, rgba(217, 74, 74, 1) 100%)`;\n      requestAnimationFrame(changeBackground);\n    };\n\n    changeBackground();\n  };\n\n  const [searchState, setSearch] = useState({\n    searchItems: [],\n    searching: false,\n  });\n\n  const [chartState, setChart] = useState({\n    hidden: true,\n    chartData: [],\n    title: \"\",\n  });\n  const [modalOpen, setModal] = useState(false);\n\n  useEffect(() => {\n    animateBackground();\n    getLoadItems();\n  }, []);\n\n  const getLoadItems = () => {\n    axios.get(\"/load\").then((res) => {\n      setSearch({ searchItems: res.data, searching: false });\n      setChart({ hidden: true, chartData: {}, title: \"\" });\n    });\n  };\n\n  const onAnalyze = (cellParams) => {\n    axios\n      .get(\n        `/analyze/${cellParams.rowModel.id}/${cellParams.rowModel.data.track}/${cellParams.rowModel.data.artists}/${cellParams.rowModel.data.album}`\n      )\n      .then((res) => {\n        const keys = [\n          \"C\",\n          \"C#/Db\",\n          \"D\",\n          \"D#/Eb\",\n          \"E\",\n          \"F\",\n          \"F#/Gb\",\n          \"G\",\n          \"G#/Ab\",\n          \"A\",\n          \"A#/Bb\",\n          \"B\",\n        ];\n        const {\n          danceability,\n          energy,\n          instrumentalness,\n          speechiness,\n          liveness,\n          acousticness,\n          valence,\n          key,\n          mode,\n          tempo,\n        } = res.data[0];\n\n        setChart({\n          hidden: false,\n          title: res.data[0].track,\n          danceability: parseInt(danceability * 100),\n          energy: parseInt(energy * 100),\n          instrumentalness: parseInt(instrumentalness * 100),\n          speechiness: parseInt(speechiness * 100),\n          liveness: parseInt(liveness * 100),\n          acousticness: parseInt(acousticness * 100),\n          valence: parseInt(valence * 100),\n          key: `${keys[key]} ${mode > 0 ? \"Major\" : \"Minor\"}`,\n          tempo: `${Math.floor(tempo)}`,\n        });\n\n        var options = {\n          chart: {\n            width: \"70%\",\n            type: \"radialBar\",\n            forColor: \"#010101\",\n          },\n          colors: [\n            \"rgba(217, 119, 191, 1)\",\n            \"rgba(217, 163, 98, 1)\",\n            \"rgba(217, 141, 98, 1)\",\n            \"rgba(217, 96, 85, 1)\",\n            \"rgba(217, 74, 74, 1)\",\n            \"#58E899\",\n            \"rgba(25, 141, 183, 1)\",\n          ],\n          series: [\n            parseInt(danceability * 100),\n            parseInt(energy * 100),\n            parseInt(instrumentalness * 100),\n            parseInt(speechiness * 100),\n            parseInt(liveness * 100),\n            parseInt(acousticness * 100),\n            parseInt(valence * 100),\n          ],\n          plotOptions: {\n            radialBar: {\n              track: {\n                show: false,\n              },\n            },\n          },\n        };\n\n        new ApexCharts(document.querySelector(\"#apexWrap\"), options).render();\n      })\n      .catch((err) => {\n        console.log(\"analysis failed!\", err);\n      });\n  };\n\n  const onReset = () => {\n    getLoadItems();\n  };\n\n  const handleSubmit = (e, textState) => {\n    e.preventDefault();\n    const { text } = textState;\n    if (!text) {\n      setSearch({ searching: true, searchItems: [] });\n      return getLoadItems();\n    }\n    setSearch({ searching: true, searchItems: [] });\n    axios\n      .get(`/search/${text}`)\n      .then((res) => {\n        setSearch({ searchItems: res.data });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleModal = (bool) => {\n    setModal(bool);\n  };\n\n  if (chartState.hidden) {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>IOX</h1>\n        </header>\n        <Paper elevation={24} style={{ background: \"rgba(1, 1, 1, 0\" }}>\n          <div className=\"App-view\">\n            {!searchState.searching ? (\n              <Search\n                items={searchState.searchItems}\n                onAnalyze={onAnalyze}\n                onSearch={setSearch}\n                forSubmit={handleSubmit}\n                isSearching={searchState.searching}\n              />\n            ) : (\n              <aside>\n                <p>loading...</p>\n                <CircularProgress />\n              </aside>\n            )}\n          </div>\n        </Paper>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"chartContainer\">\n        <Paper elevation={10} className=\"titleContainer\">\n          <p className=\"stats\" style={{ color: \"#fff\" }}>\n            {`Key: ${chartState.key}`}\n          </p>\n          <p className=\"stats\" style={{ color: \"#fff\" }}>\n            {`BPM: ${chartState.tempo}`}\n          </p>\n          <p\n            className=\"stats\"\n            style={{ color: \"rgba(217, 119, 191, 1)\" }}\n          >{`Danceability: ${chartState.danceability}`}</p>\n          <p\n            className=\"stats\"\n            style={{ color: \"rgba(217, 163, 98, 1)\" }}\n          >{`Energy: ${chartState.energy}`}</p>\n          <p\n            className=\"stats\"\n            style={{ color: \"rgba(217, 141, 98, 1)\" }}\n          >{`Instrumentalness: ${chartState.instrumentalness}`}</p>\n          <p\n            className=\"stats\"\n            style={{ color: \"rgba(217, 96, 85, 1)\" }}\n          >{`Speechiness: ${chartState.speechiness}`}</p>\n          <p\n            className=\"stats\"\n            style={{ color: \"rgba(217, 74, 74, 1)\" }}\n          >{`Liveness: ${chartState.liveness}`}</p>\n          <p\n            className=\"stats\"\n            style={{ color: \"#58E899\" }}\n          >{`Acousticness: ${chartState.acousticness}`}</p>\n          <p\n            className=\"stats\"\n            style={{ color: \"rgba(25, 141, 183, 1)\" }}\n          >{`Valence: ${chartState.valence}`}</p>\n        </Paper>\n        <div className=\"resetContainer\">\n          <Button\n            onClick={() => {\n              handleModal(true);\n            }}\n            style={{\n              color: \"rgba(217, 163, 98, 1)\",\n              border: \"1px #010101 solid\",\n              backgroundColor: \"rgba(1,1,1,.9)\",\n              boxShadow: \"2px 2px 8px rgba(1,1,1,.5)\",\n            }}\n          >\n            Legend\n          </Button>\n          <Button\n            onClick={(e) => {\n              onReset(e);\n            }}\n            style={{\n              color: \"rgba(217, 74, 74, 1)\",\n              border: \"1px #010101 solid\",\n              backgroundColor: \"rgba(1,1,1,.9)\",\n              boxShadow: \"2px 2px 8px rgba(1,1,1,.5)\",\n            }}\n          >\n            Reset\n          </Button>\n        </div>\n        <Dialog\n          onClose={() => {\n            handleModal(false);\n          }}\n          onClick={() => {\n            handleModal(false);\n          }}\n          aria-labelledby=\"simple-dialog-title\"\n          open={modalOpen}\n        >\n          <div style={{ backgroundColor: \"#010101\", padding: \"25px\" }}>\n            <DialogTitle id=\"simple-dialog-title\">\n              Feature Definitions\n            </DialogTitle>\n            <DialogContent>\n              Danceability describes how suitable a track is for dancing based\n              on a combination of musical elements including tempo, rhythm\n              stability, beat strength, and overall regularity.\n            </DialogContent>\n            <DialogContent>\n              Energy represents a perceptual measure of intensity and activity.\n              Typically, energetic tracks feel fast, loud, and noisy.\n            </DialogContent>\n            <DialogContent>\n              Instrumentalness predicts whether a track contains no vocals.\n              “Ooh” and “aah” sounds are treated as instrumental in this\n              context. Rap or spoken word tracks are clearly “vocal”.\n            </DialogContent>\n            <DialogContent>\n              Speechiness detects the presence of spoken words in a track. The\n              more exclusively speech-like the recording (e.g. talk show, audio\n              book, poetry), the closer to 100 the attribute value.\n            </DialogContent>\n            <DialogContent>\n              Liveness detects the presence of an audience in the recording.\n              Higher liveness values represent an increased probability that the\n              track was performed live.\n            </DialogContent>\n            <DialogContent>\n              Acousticness is A confidence measure of whether the track is\n              acoustic.\n            </DialogContent>\n            <DialogContent>\n              Valence is a measure describing the musical positiveness conveyed\n              by a track. Tracks with high valence sound more positive (e.g.\n              happy, cheerful, euphoric), while tracks with low valence sound\n              more negative (e.g. sad, depressed, angry).\n            </DialogContent>\n          </div>\n        </Dialog>\n        <div class=\"songTitle\">\n          <p\n            className=\"stats\"\n            style={{ color: \"#ffffff\", width: \"100%\", textAlign: \"center\" }}\n          >{`\"${chartState.title}\"`}</p>\n        </div>\n        <div className=\"chartWrap rotate\" id=\"apexWrap\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { dark } from \"@material-ui/core/styles/createPalette\";\nimport \"typeface-nunito-sans\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'VT323',\n    fontSize: 18\n  },\n  palette: {\n    type: \"dark\",\n    text: {\n      primary: \"#d9a362\",\n      secondary: \"#d9a362\",\n    },\n    action: {\n      active: \"#d9a362\",\n    },\n    divider: \"#d9a362\",\n    primary: {\n      main: \"#d9a362\",\n      light: \"#d9a362\",\n    },\n    secondary: {\n      main: \"#d9a362\",\n      light: \"#d9a362\",\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}